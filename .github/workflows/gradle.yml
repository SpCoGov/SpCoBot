# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Make Gradle script executable
      run: chmod +x /home/runner/work/SpCoBot/SpCoBot/gradlew
      
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: buildPluginLegacy
        
    - name: Get project version from build.gradle
      id: get_project_version
      run: echo "::set-output name=project_version::$(grep -oP 'version "\K[^"]+'/home/runner/work/SpCoBot/SpCoBot/build.gradle)"

    - name: Set Default Version
      id: set_default_version
      run: |
        if [ -z "${{ steps.get_project_version.outputs.project_version }}" ]; then
          echo "Setting default version to 0.1.0"
          echo "::set-output name=project_version::0.1.0"
        fi
      
    - name: Create Git Tag
      run: git config --global user.name "SpCo" && git config --global user.email "you@example.com" && git tag -a -m "Release v${{ steps.get_project_version.outputs.project_version }}" "v${{ steps.get_project_version.outputs.project_version }}"
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: v${{ steps.get_project_version.outputs.project_version }}
        files: /home/runner/work/SpCoBot/SpCoBot/build/mirai
        release_name: Release-${{ steps.get_project_version.outputs.project_version }}  # 使用项目版本作为文件名
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: /home/runner/work/SpCoBot/SpCoBot/build/mirai/SpCoBot-${{ steps.get_project_version.outputs.project_version }}.mirai.jar
        asset_name: SpCoBot-${{ steps.get_project_version.outputs.project_version }}.mirai.jar
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
